{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brama\\\\Documents\\\\GitHub\\\\fleet-management\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    // Check local storage for authentication status\n    const storedAuth = localStorage.getItem('isAuthenticated');\n    return storedAuth === 'true'; // Convert string to boolean\n  });\n  const login = (username, password) => {\n    // Hardcoded credentials for demonstration\n    if (username === 'admin' && password === 'password') {\n      setIsAuthenticated(true);\n      localStorage.setItem('isAuthenticated', 'true'); // Store in local storage\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated'); // Remove from local storage\n  };\n  useEffect(() => {\n    // Optional: Sync state with local storage on change\n    localStorage.setItem('isAuthenticated', isAuthenticated);\n  }, [isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"3H5Kvw3rlhhIbGWvS4IYnPS1XzI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","storedAuth","localStorage","getItem","login","username","password","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brama/Documents/GitHub/fleet-management/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\r\n    // Check local storage for authentication status\r\n    const storedAuth = localStorage.getItem('isAuthenticated');\r\n    return storedAuth === 'true'; // Convert string to boolean\r\n  });\r\n\r\n  const login = (username, password) => {\r\n    // Hardcoded credentials for demonstration\r\n    if (username === 'admin' && password === 'password') {\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('isAuthenticated', 'true'); // Store in local storage\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('isAuthenticated'); // Remove from local storage\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Optional: Sync state with local storage on change\r\n    localStorage.setItem('isAuthenticated', isAuthenticated);\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC3D;IACA,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC1D,OAAOF,UAAU,KAAK,MAAM,CAAC,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMG,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACnDN,kBAAkB,CAAC,IAAI,CAAC;MACxBE,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,CAAC;MACjD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBR,kBAAkB,CAAC,KAAK,CAAC;IACzBE,YAAY,CAACO,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC9C,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd;IACAU,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAER,eAAe,CAAC;EAC1D,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACEL,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,eAAe;MAAEK,KAAK;MAAEI;IAAO,CAAE;IAAAX,QAAA,EAC7DA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CAhCWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}